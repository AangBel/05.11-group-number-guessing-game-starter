const express = require('express');
const bodyParser = require('body-parser');
const app = express();
const PORT = 5000;



let player = [];
function guessGame()  {
  return Math.floor(Math.random(1, 25));
};
// let guessGame = () => {}
let randInt = guessGame();
function compareAgainstInput(array){
  let val = array.length -1
  if (array[val].p1 === array[val].randInt){
    return 'PLAYER 1 WINS!'
  }
  if (array[val].p2 === array[val].randInt){
    return 'PLAYER 2 WINS!'
  }
  ///// if less than or equal 
  if (array[val].p1 < array[val].randInt){
    return 'Sorry, too low'
  }
  
  if (array[val].p2 < array[val].randInt){
    return 'Sorry, too low'
  }






  // if (inputA === ){
  //   return 'PLAYER 1 WINS!'
  // }
  // if (inputB === random){
  //   return 'PLAYER 2 WINS!'
  // }
  // if (inputA<random){
  //   return 'Sorry, too low'
  // }
  // if (inputA>random){
  //   return 'Sorry, too high'
  // }
  // if (inputB<random){
  //   return 'Sorry, too low'
  // }
  // if (inputB>random){
  //   return 'Sorry, too high'
  // }

// get this back to the client side???? HOWWWWWWWWWWW?!

}


// This must be added before GET & POST routes.
app.use(bodyParser.urlencoded({extended:true}))

// Serve up static files (HTML, CSS, Client JS)
app.use(express.static('server/public'));



app.get('/input', function(req, res){
  console.log('Request for info from /input')
// pretty sure comparison logic happens here or also gets sent here. 
  // also send the result of higher or lower or the comparison of player[player.length -1].p1 & player[player.length -1].p2
  // against the random number generated by our function.
  //we can use a for loop in order for it to look at each object 
  console.log(player[0]);

  res.send(player);
  // res.send(player, compareAgainstInput(randInt, player[player.length-1].p1, ))
})


//store answer in variable and then add var to the the object and then
// pushing it alongside then (randInt)- 
//push to the players array 
app.post('/input', function(req, res){
  console.log('Adding info to /input')

  req.body.randInt = randInt; 
  if(req.body.p1 > randInt) {
    req.body.p1_result = 'too high';
  }
  
  player.push(req.body)

  res.sendStatus(201)

})


// GET & POST Routes go here


app.listen(PORT, () => {
  console.log ('Server is running on port', PORT)
})




